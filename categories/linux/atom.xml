<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | StevenOcchipinti.com]]></title>
  <link href="http://blog.stevenocchipinti.com/categories/linux/atom.xml" rel="self"/>
  <link href="http://blog.stevenocchipinti.com/"/>
  <updated>2013-07-14T22:52:07+10:00</updated>
  <id>http://blog.stevenocchipinti.com/</id>
  <author>
    <name><![CDATA[Steven Occhipinti]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Printing over previously printed characters and lines]]></title>
    <link href="http://blog.stevenocchipinti.com/2013/06/removing-previously-printed-lines.html"/>
    <updated>2013-06-08T15:27:00+10:00</updated>
    <id>http://blog.stevenocchipinti.com/2013/06/removing-previously-printed-lines</id>
    <content type="html"><![CDATA[<p>I recently wrote small <a href="https://github.com/stevenocchipinti/tramtracker">Ruby Gem</a> that provides a command line interface to Melbourne&rsquo;s <a href="http://yarratrams.com.au/tramtracker">TramTracker service</a>.</p>

<p>One main feature I wanted was to allow the script to poll TramTracker on a regular basis.<br/>
In the past, I used the command line utility watch to achieve this, but I couldn&rsquo;t find a way to enforce a &ldquo;max iterations&rdquo; option.
If it gets forgotten about in the background, TramTracker will eventually block that IP address!</p>

<p>So I turned to Ruby. Now instead of printing the same block of text over and over again and filling up the terminal, I thought it would be better to just have that text overwrite itself in place.</p>

<p>In this post, I&rsquo;ll outline a couple of ways of achieving this.</p>

<h2>Using the \b (backspace) character</h2>

<p>Printing a \b character does the same thing as pressing backspace. This is really simple to use and is great for little &ldquo;progress&rdquo; spinners.<br/>
For example, a character that cycles through <code>|</code>, <code>/</code>, <code>-</code>, <code>\</code>:</p>

<p>``` ruby
puts &ldquo;foo\b\b\bbar&rdquo;</p>

<h1>=> bar</h1>

<p>(&ldquo;|/&ndash;\&rdquo;*10).chars.each {|c| print c; sleep 1; print &ldquo;\b&rdquo;}</p>

<h1>=> Cheesy, old-school spinner</h1>

<p>```</p>

<p>There are two main shortfalls with this approach, one is that it only works on a single line and two is that if you want to overwrite lots of characters, you&rsquo;d need just as many <code>\b</code> characters (you would probably introduce a loop).</p>

<p>``` ruby
puts &ldquo;foo\n\b\b\bbar&rdquo;</p>

<h1>=> foo\nbar</h1>

<p>```</p>

<h2>Using the \r (carriage return) character</h2>

<p>To avoid having to repeat just as many <code>\b</code> characters, a simple alternative would be to return the cursor to the start of the line and write over the top of the existing characters. For example:</p>

<p><code>ruby
100.times {|p| print "\rDownloading %#{p+1}..."; sleep 1}
</code></p>

<p>This approach still won&rsquo;t work across multiple lines, but it has another subtle shortfall too, it doesn&rsquo;t clear the entire line. For example:</p>

<p>```
puts &ldquo;foo\rp&rdquo;</p>

<h1>=> poo</h1>

<p>```</p>

<p>A common work around for this is to pad the end of the string with spaces, but there are better ways (keep reading ;) )</p>

<h2>Using curses</h2>

<p>The most common answer to overwriting characters across multiple lines, is to use <a href="http://en.wikipedia.org/wiki/Curses_(programming_library)">curses</a>.
Curses allows you to pick exactly with character you want to update and makes <a href="https://www.google.com.au/search?hl=en&amp;q=command+line+curses&amp;bav=on.2,or.r_cp.r_qf.&amp;bvm=bv.47534661,d.aGc&amp;biw=1366&amp;bih=679&amp;um=1&amp;ie=UTF-8&amp;tbm=isch&amp;source=og&amp;sa=N&amp;tab=wi&amp;ei=r0WzUbyWF4T-iAfn8IH4DA">menu driven Text User Interfaces</a> (TUI&rsquo;s) easier to develop.
Ruby happens to have a <a href="http://www.ruby-doc.org/stdlib-2.0/libdoc/curses/rdoc/Curses.html">curses module</a> built in to its standard library, which provides a simple API, for example:</p>

<p><code>ruby
setpos(lines/2, cols/2) # Start in the middle
addstr("Hello world")
</code></p>

<p>I created a more complete (simple) example of using curses in a <a href="https://gist.github.com/stevenocchipinti/5703381">gist here</a>.</p>

<p>Curses is pretty good for this sort of stuff, it gives you a lot for free.
The thing that I didn&rsquo;t like about using the curses library was that when it initialises, it clears the screen.
This behaviour suits a TUI, and the old contents is still restored when you return, but I was being picky and didn&rsquo;t want that.</p>

<h2>Using individual cursor movement characters</h2>

<p>This last option is the most fundamental of the bunch. Terminals generally support characters that will allow you to move the cursor around at will and would be the basis of things like curses, although not as commonly used. Here are the most common characters to move the cursor around:</p>

<p><code>
\033[&lt;L&gt;;&lt;C&gt;H # Move the cursor to line L, column C
\033[&lt;N&gt;A     # Move the cursor up N lines
\033[&lt;N&gt;B     # Move the cursor down N lines
\033[&lt;N&gt;C     # Move the cursor forward N columns
\033[&lt;N&gt;D     # Move the cursor backward N columns
\033[2J       # Clear the screen, move to (0,0)
\033[K        # Erase to end of line
</code></p>

<p>You can read more about these &ldquo;escape sequences&rdquo; <a href="http://www.linuxselfhelp.com/howtos/Bash-Prompt/Bash-Prompt-HOWTO-6.html#ss6.2">here</a>.
I ended up using the <code>\033[K</code> (&ldquo;Erase to end of line&rdquo;) and the <code>\033[A</code> (&ldquo;Move the cursor up&rdquo;) <a href="https://github.com/stevenocchipinti/tramtracker/blob/master/lib/formatters/polling_formatter.rb">characters in my TramTracker gem</a> and it worked a treat!</p>

<p>Now go and make a cool retro user interface! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changing the default boot option with GRUB2]]></title>
    <link href="http://blog.stevenocchipinti.com/2012/09/changing-default-boot-option-with-grub2.html"/>
    <updated>2012-09-19T11:33:00+10:00</updated>
    <id>http://blog.stevenocchipinti.com/2012/09/changing-default-boot-option-with-grub2</id>
    <content type="html"><![CDATA[<div class="css-full-post-content js-full-post-content">
Gone are the days of the nice <span style="font-family: 'Courier New', Courier, monospace;">/boot/grub/menu.lst</span> file, but with new tools comes new features.<br /><br /><br /><b>Changing the default boot item</b><br /><br />In Grub2 you can change the default boot entry by editing the <span style="font-family: 'Courier New', Courier, monospace;">/etc/default/grub</span> file.<br />In this file you'll see something like this near the top: <br /><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;"><span style="background-color: #666666;">GRUB_DEFAULT=0</span><br />#GRUB_HIDDEN_TIMEOUT=0<br />GRUB_HIDDEN_TIMEOUT_QUIET=true<br />GRUB_TIMEOUT=10<br />GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`<br />GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"<br />GRUB_CMDLINE_LINUX=""</span></blockquote><div><br /></div><div>The first line above tells Grub to boot the first boot entry by default (menu item with index 0).</div><div>You can simply change this to menu entry you prefer, but whenever you make any change to this file you need to run the following command to make the changes take effect:<br /><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">$&gt; sudo update-grub</span></blockquote></div><div><br /></div><div><b>Changing the default boot entry from the command line</b></div><div><br /></div><div>A new feature that Grub2 provides is to change this option dynamically from the command-line.</div><div>In order for this to work, instead of setting the <span style="font-family: 'Courier New', Courier, monospace;">GRUB_DEFAULT</span> option to the desired index, set it to '<span style="font-family: 'Courier New', Courier, monospace;">saved</span>' instead, like this:</div><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">GRUB_DEFAULT=saved</span></blockquote><br /><div>And run <span style="font-family: 'Courier New', Courier, monospace;">update-grub</span> to make the changes take effect:</div><div><div><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">$&gt; sudo update-grub</span></blockquote></div></div><div><br /></div><div>Now you can use the <span style="font-family: 'Courier New', Courier, monospace;">grub-set-default</span> and the <span style="font-family: 'Courier New', Courier, monospace;">grub-reboot</span> commands.</div><div>Both commands take the index of the boot entry you want as a command line argument:</div><div><br /></div><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">$&gt; grub-set-default &lt;entry&gt;</span></blockquote>This command will&nbsp;permanently&nbsp;set the default boot entry to the index specified on the command line, useful if you tend to change the default regularly.<br /><br /><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">$&gt; grub-reboot &lt;entry&gt;</span></blockquote>This command will reboot the machine and boot into the specified boot entry, but only that once. The following boot will use the default.
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding a network printer in Ubuntu 12.04]]></title>
    <link href="http://blog.stevenocchipinti.com/2012/08/adding-network-printer-in-ubuntu-1204.html"/>
    <updated>2012-08-05T04:11:00+10:00</updated>
    <id>http://blog.stevenocchipinti.com/2012/08/adding-network-printer-in-ubuntu-1204</id>
    <content type="html"><![CDATA[<p>In the old days, printing was really hard in linux. It was one of the things that was a deal breaker when trying to switch from Windows for a lot of people, but when I first tried Ubuntu (probably around 2006-2007) it made all that pain go away! It was easy! A couple of clicks and you could set up a network printer and its been that easy ever since.</p>

<p>Recently Ubuntu have tried to make their settings screen a bit like a Mac, and to simplify everything they seem to be using a simplified user interface for the printer configuration too:</p>

<p><img class="center <a" src="href="http://3.bp.blogspot.com/-Bx9JrDkVYrk/UB3w_5N77aI/AAAAAAAAAKY/5HHdw8ZErB0/Screenshot+from+2012-08-05+14:04:37.png">http://3.bp.blogspot.com/-Bx9JrDkVYrk/UB3w_5N77aI/AAAAAAAAAKY/5HHdw8ZErB0/Screenshot+from+2012-08-05+14:04:37.png</a>" title="New Settings user interface" >
<img class="center <a" src="href="http://4.bp.blogspot.com/-xO2uGM8R36A/UB3xME_iwZI/AAAAAAAAAKg/kBFbC_MDcv8/Screenshot+from+2012-08-05+14:04:55.png">http://4.bp.blogspot.com/-xO2uGM8R36A/UB3xME_iwZI/AAAAAAAAAKg/kBFbC_MDcv8/Screenshot+from+2012-08-05+14:04:55.png</a>" title="New Printing user interface" ></p>

<p>Well this new interface doesn&rsquo;t work for me, when I try to add a network printer, I get the error message:</p>

<p><blockquote><p>FirewallD is not running. Network printer detection needs services mdns, ipp, ipp-client and samba-client enabled on firewall.</p></blockquote></p>

<p><img class="center <a" src="href="http://1.bp.blogspot.com/-FTpSMga_I2I/UB3xOZVzlDI/AAAAAAAAAKo/4_KILPWTWTg/Screenshot+from+2012-08-05+14%253A03%253A44.png">http://1.bp.blogspot.com/-FTpSMga_I2I/UB3xOZVzlDI/AAAAAAAAAKo/4_KILPWTWTg/Screenshot+from+2012-08-05+14%253A03%253A44.png</a>" title="The error that stops me from finding my network printer" ></p>

<p>Well no matter what I did, I couldn&rsquo;t add my printer. After some googling around, I found how to get to the old user interface&hellip; which actually works!
Just type this into a terminal:</p>

<p><code>
sudo system-config-printer
</code></p>

<p>And you will be given this old familiar screen:</p>

<p><img class="center <a" src="href="http://1.bp.blogspot.com/-SnoWmsgEnX0/UB3xQWJYmhI/AAAAAAAAAK4/LCbtVTqQFZE/Screenshot+from+2012-08-05+14%253A04%253A55.png">http://1.bp.blogspot.com/-SnoWmsgEnX0/UB3xQWJYmhI/AAAAAAAAAK4/LCbtVTqQFZE/Screenshot+from+2012-08-05+14%253A04%253A55.png</a>" title="The classic printing user interface&hellip; the one that works!" ></p>

<p>Clicking the big &ldquo;Add&rdquo; button in this screen and following the steps worked great for me. Another alternative is to use the CUPS web interface on <a href="http://localhost:631">http://localhost:631</a> but that can be a little more complicated.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Copy and Paste over SSH with Xclip]]></title>
    <link href="http://blog.stevenocchipinti.com/2012/02/copy-and-paste-over-ssh-with-xclip.html"/>
    <updated>2012-02-12T12:59:00+11:00</updated>
    <id>http://blog.stevenocchipinti.com/2012/02/copy-and-paste-over-ssh-with-xclip</id>
    <content type="html"><![CDATA[<div class="css-full-post-content js-full-post-content">
Have you ever SSH'ed to a server and found you need to copy some data back where a simple selection copy and paste just doesn't seem practical?<br />When this happens to me, I normally dump that data to a temp file, start up another terminal and SCP the file back before going back to delete the temp file, but I recently found a better way.<br /><br />I discovered <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">xclip</span>. Using the <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">-X</span> option of SSH to enable X11 forwarding, <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">xclip</span> allows you to interact with the <i>"X selections"</i> clipboard.<br /><br />To use it, log on to a remote server via <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">ssh -X</span> and ensure <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">xclip</span> is installed, then simply pipe data to <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">xclip</span> and you will be able to paste it anywhere locally with the usual X selection paste (mouse wheel click, shift-insert, etc.).<br /><br />Here is an example:<br /><br /><blockquote class="tr_bq" style="font-family: &quot;Courier New&quot;,Courier,monospace;">ssh -X steve@example.com<br />sudo apt-get install xclip<br />ps -ef | xclip</blockquote><br />Now anywhere on your local linux machine, you can press &lt;shift&gt;-&lt;insert&gt; (or mouse wheel click) to paste the content.<br />If you need to pipe this data to another process locally, you can retrieve the clipboard from the command like with <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">xclip</span> like this:<br /><br /><blockquote class="tr_bq" style="font-family: &quot;Courier New&quot;,Courier,monospace;">xclip -o | less</blockquote>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minecraft exception in linux]]></title>
    <link href="http://blog.stevenocchipinti.com/2012/02/minecraft-exception-in-linux.html"/>
    <updated>2012-02-02T12:25:00+11:00</updated>
    <id>http://blog.stevenocchipinti.com/2012/02/minecraft-exception-in-linux</id>
    <content type="html"><![CDATA[<p>I finally decided to install Minecraft on my new shiny <a href="/2011/12/toshiba-portege-z830.html">Toshiba Portege z830</a>.<br/>
Ubuntu ships with an open-source version of Java, which did run Minecraft, but the graphics were terrible, even on the lowest settings. There were artefacts everywhere!</p>

<p>So as recommended, I switched to the official JRE. Now the login screen works, but that&rsquo;s about it. After logging in, I just got a black screen and the following exception in the console:</p>

<p><code>
Exception in thread "Minecraft main thread"
java.lang.ExceptionInInitializerError at
net.minecraft.client.Minecraft.a(SourceFile:180) at
net.minecraft.client.Minecraft.run(SourceFile:648) at
java.lang.Thread.run(Thread.java:662)&lt;div class="de2"&gt;Caused by: java.lang.ArrayIndexOutOfBoundsException: 0 at
org.lwjgl.opengl.XRandR$Screen.&amp;lt;init&amp;gt;(XRandR.java:234) at
org.lwjgl.opengl.XRandR$Screen.&amp;lt;init&amp;gt;(XRandR.java:196) at
org.lwjgl.opengl.XRandR.populate(XRandR.java:87) at
org.lwjgl.opengl.XRandR.access$100(XRandR.java:52)at
org.lwjgl.opengl.XRandR$1.run(XRandR.java:110) at
java.security.AccessController.doPrivileged(Native Method) at
org.lwjgl.opengl.XRandR.getConfiguration(XRandR.java:108) at
org.lwjgl.opengl.LinuxDisplay.init(LinuxDisplay.java:618) at
org.lwjgl.opengl.Display.&amp;lt;clinit&amp;gt;(Display.java:135)
... 3 more
</code></p>

<p>After discussing the problem in IRC, the solution was quite simple. It turns out <code>lwjgl</code> is a &ldquo;<em>Light Weight Java Game Library</em>&rdquo; and the version I had wasn&rsquo;t behaving.<br/>
On the advice of the helpful IRC'ers, I downloaded the latest <code>lwjgl</code> from <a href="http://sourceforge.net/projects/java-game-lib/files/Official%20Releases/">here</a> (which at time of writing is 2.8.3) to get it all to work nicely.</p>

<p>To install it, I downloaded the zip file, extracted it to a temporary directory, then copied across these files:</p>

<p><code>
cp lwjgl-2.8.3/jar/lwjgl.jar ~/.minecraft/bin
cp lwjgl-2.8.3/native/linux/* ~/.minecraft/bin/natives
</code></p>

<p>Done! Now it works nicely.</p>
]]></content>
  </entry>
  
</feed>
