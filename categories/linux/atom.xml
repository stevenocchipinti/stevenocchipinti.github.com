<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | StevenOcchipinti.com]]></title>
  <link href="http://blog.stevenocchipinti.com/categories/linux/atom.xml" rel="self"/>
  <link href="http://blog.stevenocchipinti.com/"/>
  <updated>2014-05-17T12:35:59+10:00</updated>
  <id>http://blog.stevenocchipinti.com/</id>
  <author>
    <name><![CDATA[Steven Occhipinti]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing Minecraft in Linux]]></title>
    <link href="http://blog.stevenocchipinti.com/2013/11/10/installing-minecraft-in-linux/"/>
    <updated>2013-11-10T12:26:00+11:00</updated>
    <id>http://blog.stevenocchipinti.com/2013/11/10/installing-minecraft-in-linux</id>
    <content type="html"><![CDATA[<h2>1. Download Oracle Java</h2>

<p>First you will need the official Oracle version of Java (the open source
alternatives will probably not work as well for Minecraft). I think you can
just download the runtime, but I personally opt for installing the complete
Java Development Kit (JDK).</p>

<p>You can download the <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html">official JDK here</a>.<br/>
If you run a RedHat based distro, there is a <code>.rpm</code>, otherwise just get the
<code>.tgz</code> for your system.</p>

<h2>2. Installing Oracle Java</h2>

<p>At the time of writing, the version of java is 7u45.<br/>
I move this <code>.tar.gz</code> file from my downloads folder to <code>/opt</code> and unzip it
there, like this:
<code>
mv ~/Downloads/jdk-7u45-linux-x64.tar.gz /opt
cd /opt
tar xzvf jdk-7u45-linux-x64.tar.gz
</code></p>

<p>This will create a new directory called <code>jdk1.7.0_45</code>.<br/>
As there is a good chance we will be updating java in the future, I create a
symlink that we can easily change to the new versions in the future like this:
<code>
ln -s jdk1.7.0_45 jdk
</code></p>

<p>Now when ever you want to find java, it will be in <code>/opt/jdk</code>.</p>

<p>All we have to do now is make the executables available on the <code>PATH</code>.<br/>
Edit your <code>.bashrc</code> (or <code>.profile</code>, etc.) and add this line:
<code>
export PATH=$PATH:/opt/jdk/bin/
</code></p>

<h2>3. Install Minecraft</h2>

<p>Get Minecraft from the <a href="https://minecraft.net/download">official Minecraft download page</a>.
Under the &ldquo;Minecraft for Linux / Other&rdquo; there is a link to download the
official Minecraft <code>.jar</code> file.  I also put this in <code>/opt</code>:
<code>
mkdir /opt/minecraft
mv ~/Downloads/Minecraft.jar /opt/minecraft
</code></p>

<p>At this point we can start Minecraft with this:
<code>
java -jar Minecraft.jar
</code></p>

<h2>4. Setting up an Application Launcher for Gnome</h2>

<p>I use Gnome Shell and if I&rsquo;m not in a terminal, I normally use Gnome&rsquo;s
<em>Activities Overview</em> to launch apps by pressing the &lsquo;super&rsquo; key, typing
&ldquo;Minecraft&rdquo; and pressing &lsquo;enter&rsquo;.</p>

<p>We want Minecraft to be installed just like any other app, so we will need to
add a launcher for Minecraft, but before we do that, we need an icon for it.
I just found one online, so lets download it to our <code>/opt/minecraft</code> directory.</p>

<p><code>
cd /opt/minecraft
wget http://images.wikia.com/yogbox/images/d/dd/Minecraft_Block.svg
</code></p>

<p>Then to make an application launcher, you can use this:
<code>
gnome-desktop-item-edit --create-new ~/.local/share/applications
</code></p>

<p><img class="center <a" src="href="https://lh5.googleusercontent.com/-9VnJ9K_nqQo/Un72Np6LzPI/AAAAAAAABTg/PVig82azah8/w435-h224-no">https://lh5.googleusercontent.com/-9VnJ9K_nqQo/Un72Np6LzPI/AAAAAAAABTg/PVig82azah8/w435-h224-no</a>"></p>

<p>You can assign it the logo we downloaded earlier and use this for the command:
<code>
/opt/jdk/bin/java -jar /opt/minecraft/Minecraft.jar
</code></p>

<h2>5. Have fun!</h2>

<p>Now you can launch Minecraft just like the other apps in Gnome Shell!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Printing over previously printed characters and lines]]></title>
    <link href="http://blog.stevenocchipinti.com/2013/06/removing-previously-printed-lines.html"/>
    <updated>2013-06-08T15:27:00+10:00</updated>
    <id>http://blog.stevenocchipinti.com/2013/06/removing-previously-printed-lines</id>
    <content type="html"><![CDATA[<p>I recently wrote small <a href="https://github.com/stevenocchipinti/tramtracker">Ruby Gem</a> that provides a command line interface to Melbourne&rsquo;s <a href="http://yarratrams.com.au/tramtracker">TramTracker service</a>.</p>

<p>One main feature I wanted was to allow the script to poll TramTracker on a regular basis.<br/>
In the past, I used the command line utility watch to achieve this, but I couldn&rsquo;t find a way to enforce a &ldquo;max iterations&rdquo; option.
If it gets forgotten about in the background, TramTracker will eventually block that IP address!</p>

<p>So I turned to Ruby. Now instead of printing the same block of text over and over again and filling up the terminal, I thought it would be better to just have that text overwrite itself in place.</p>

<p>In this post, I&rsquo;ll outline a couple of ways of achieving this.</p>

<h2>Using the \b (backspace) character</h2>

<p>Printing a \b character does the same thing as pressing backspace. This is really simple to use and is great for little &ldquo;progress&rdquo; spinners.<br/>
For example, a character that cycles through <code>|</code>, <code>/</code>, <code>-</code>, <code>\</code>:</p>

<p>``` ruby
puts &ldquo;foo\b\b\bbar&rdquo;</p>

<h1>=> bar</h1>

<p>(&ldquo;|/&ndash;\&rdquo;*10).chars.each {|c| print c; sleep 1; print &ldquo;\b&rdquo;}</p>

<h1>=> Cheesy, old-school spinner</h1>

<p>```</p>

<p>There are two main shortfalls with this approach, one is that it only works on a single line and two is that if you want to overwrite lots of characters, you&rsquo;d need just as many <code>\b</code> characters (you would probably introduce a loop).</p>

<p>``` ruby
puts &ldquo;foo\n\b\b\bbar&rdquo;</p>

<h1>=> foo\nbar</h1>

<p>```</p>

<h2>Using the \r (carriage return) character</h2>

<p>To avoid having to repeat just as many <code>\b</code> characters, a simple alternative would be to return the cursor to the start of the line and write over the top of the existing characters. For example:</p>

<p><code>ruby
100.times {|p| print "\rDownloading %#{p+1}..."; sleep 1}
</code></p>

<p>This approach still won&rsquo;t work across multiple lines, but it has another subtle shortfall too, it doesn&rsquo;t clear the entire line. For example:</p>

<p>```
puts &ldquo;foo\rp&rdquo;</p>

<h1>=> poo</h1>

<p>```</p>

<p>A common work around for this is to pad the end of the string with spaces, but there are better ways (keep reading ;) )</p>

<h2>Using curses</h2>

<p>The most common answer to overwriting characters across multiple lines, is to use <a href="http://en.wikipedia.org/wiki/Curses_(programming_library)">curses</a>.
Curses allows you to pick exactly with character you want to update and makes <a href="https://www.google.com.au/search?hl=en&amp;q=command+line+curses&amp;bav=on.2,or.r_cp.r_qf.&amp;bvm=bv.47534661,d.aGc&amp;biw=1366&amp;bih=679&amp;um=1&amp;ie=UTF-8&amp;tbm=isch&amp;source=og&amp;sa=N&amp;tab=wi&amp;ei=r0WzUbyWF4T-iAfn8IH4DA">menu driven Text User Interfaces</a> (TUI&rsquo;s) easier to develop.
Ruby happens to have a <a href="http://www.ruby-doc.org/stdlib-2.0/libdoc/curses/rdoc/Curses.html">curses module</a> built in to its standard library, which provides a simple API, for example:</p>

<p><code>ruby
setpos(lines/2, cols/2) # Start in the middle
addstr("Hello world")
</code></p>

<p>I created a more complete (simple) example of using curses in a <a href="https://gist.github.com/stevenocchipinti/5703381">gist here</a>.</p>

<p>Curses is pretty good for this sort of stuff, it gives you a lot for free.
The thing that I didn&rsquo;t like about using the curses library was that when it initialises, it clears the screen.
This behaviour suits a TUI, and the old contents is still restored when you return, but I was being picky and didn&rsquo;t want that.</p>

<h2>Using individual cursor movement characters</h2>

<p>This last option is the most fundamental of the bunch. Terminals generally support characters that will allow you to move the cursor around at will and would be the basis of things like curses, although not as commonly used. Here are the most common characters to move the cursor around:</p>

<p><code>
\033[&lt;L&gt;;&lt;C&gt;H # Move the cursor to line L, column C
\033[&lt;N&gt;A     # Move the cursor up N lines
\033[&lt;N&gt;B     # Move the cursor down N lines
\033[&lt;N&gt;C     # Move the cursor forward N columns
\033[&lt;N&gt;D     # Move the cursor backward N columns
\033[2J       # Clear the screen, move to (0,0)
\033[K        # Erase to end of line
</code></p>

<p>You can read more about these &ldquo;escape sequences&rdquo; <a href="http://www.linuxselfhelp.com/howtos/Bash-Prompt/Bash-Prompt-HOWTO-6.html#ss6.2">here</a>.
I ended up using the <code>\033[K</code> (&ldquo;Erase to end of line&rdquo;) and the <code>\033[A</code> (&ldquo;Move the cursor up&rdquo;) <a href="https://github.com/stevenocchipinti/tramtracker/blob/master/lib/formatters/polling_formatter.rb">characters in my TramTracker gem</a> and it worked a treat!</p>

<p>Now go and make a cool retro user interface! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Processing raw photos in linux]]></title>
    <link href="http://blog.stevenocchipinti.com/Processing-raw-photos-in-linux.html"/>
    <updated>2012-12-24T11:49:00+11:00</updated>
    <id>http://blog.stevenocchipinti.com/Processing-raw-photos-in-linux</id>
    <content type="html"><![CDATA[<p>For quite a while now I&rsquo;ve had my camera set to store a <code>.jpg</code> file and a raw <code>.nef</code> file for every shot, but my theory was always that memory is so cheap that I may as well store everything and I&rsquo;ll only use the raw files if the JPG&rsquo;s turned out really bad. That has saved me a few times, but I never really learned how to process raw files properly.</p>

<p>Last year we had a Christmas lunch at our place, and I was quite happy with some of the photos I took.
There was one set of photos I took of my little cousin and her expressions were just beautiful, except I really stuffed up my white balance and picture control! I was shooting inside, then went outside and spontaneously took these photos without reconfiguring.<br/>
Due to privacy reasons, I can&rsquo;t show you these photos, but I will still demonstrate the effect with an example below.</p>

<p>My Nikon D90 has a raw file processor built in, so I could do post processing from the camera itself, but most professionals use Adobe Lightroom or something like that so they can use a nice big screen and have a lot more options for tweaking the photos.
Being a linux nerd, I decided to do a little research into open source alternatives and soon realised what my favourite is&hellip;</p>

<h2>RawTherapee</h2>

<p><a href="http://rawtherapee.com">RawTherapee</a> is really easy to use and they have builds for Linux, Mac and Windows.<br/>
It provides an interface to process the raw files, then export them either straight to a file or into an editor like The Gimp for further alterations.
I found the video below to be a good run down of the basic features, but there is even more than this.<br/>
The RawTherapee website provides quite a <a href="http://rawtherapee.com/blog/documentation">detailed manual</a> on every feature in the app.</p>

<div style="text-align: center;"><iframe allowfullscreen="allowfullscreen" frameborder="0" height="315" src="http://www.youtube.com/embed/1c3c33JVKVE" width="420"></iframe></div>


<h2>My attempt</h2>

<p>I am still fairly new to raw processing, so a professional could probably do a better job than me, but I was fairly happy with the result so far &ndash; although with that said, my screen is not calibrated so it might only look good for me :P</p>

<p>To dive straight in, the main things I adjusted in RawTherapee were the <em>&lsquo;exposure compensation&rsquo;</em>, <em>&lsquo;black level&rsquo;</em>, <em>&lsquo;contrast&rsquo;</em>, <em>&lsquo;saturation&rsquo;</em>, <em>&lsquo;sharpening&rsquo;</em>, <em>&lsquo;curves&rsquo;</em>, <em>&lsquo;white balance&rsquo;</em> and <em>&lsquo;vibrance&rsquo;</em>.<br/>
I&rsquo;m used to adjusting these things in The Gimp, but the two most powerful tools here for me were the ability to easily change the <em>&lsquo;exposure compensation&rsquo;</em> and <em>&lsquo;white balance&rsquo;</em> &ndash; I normally find these things either pretty hard or sometimes impossible to get right from a processed JPG.</p>

<p>Here are my results, the first photo is straight from the camera, the next is after processing in RawTherapee and the last is after some minor tweaks in The Gimp.</p>

<p><img class="center <a" src="href="http://1.bp.blogspot.com/--giSUfcFUtE/UNg3_Tf6REI/AAAAAAAAAS8/6ETjJcVTG4Y/s320/DSC_5597.JPG">http://1.bp.blogspot.com/--giSUfcFUtE/UNg3_Tf6REI/AAAAAAAAAS8/6ETjJcVTG4Y/s320/DSC_5597.JPG</a>" title="Straight from the camera, with incorrect settings" ></p>

<p><img class="center <a" src="href="http://4.bp.blogspot.com/-ZdA-k_HOPzM/UNg4U1JsKhI/AAAAAAAAATE/8qr7EgoTYI0/s320/DSC_5597e.jpg">http://4.bp.blogspot.com/-ZdA-k_HOPzM/UNg4U1JsKhI/AAAAAAAAATE/8qr7EgoTYI0/s320/DSC_5597e.jpg</a>" title="After processing in RawTherapee" ></p>

<p><img class="center <a" src="href="http://4.bp.blogspot.com/-b2Mg3JIDJn4/UNg4zgpbdXI/AAAAAAAAATM/8bBACiQ_cYU/s320/DSC_5597e2.jpg">http://4.bp.blogspot.com/-b2Mg3JIDJn4/UNg4zgpbdXI/AAAAAAAAATM/8bBACiQ_cYU/s320/DSC_5597e2.jpg</a>" title="After adding some minor tweaks in The Gimp" ></p>

<h2>Next steps</h2>

<p>So I can do the basics now, but its far from perfect. The next steps for me are to practise more! I should process more files myself. The goal is to get into a easy workflow where I shoot, transfer to my machine, rate and process the raw&rsquo;s, edit the resulting JPG&rsquo;s if they need it, backup the whole lot and then share them with the world!</p>

<p>I still have a lot to learn, but I&rsquo;m looking forward to getting better at this!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changing the default boot option with GRUB2]]></title>
    <link href="http://blog.stevenocchipinti.com/2012/09/changing-default-boot-option-with-grub2.html"/>
    <updated>2012-09-19T11:33:00+10:00</updated>
    <id>http://blog.stevenocchipinti.com/2012/09/changing-default-boot-option-with-grub2</id>
    <content type="html"><![CDATA[<div class="css-full-post-content js-full-post-content">
Gone are the days of the nice <span style="font-family: 'Courier New', Courier, monospace;">/boot/grub/menu.lst</span> file, but with new tools comes new features.<br /><br /><br /><b>Changing the default boot item</b><br /><br />In Grub2 you can change the default boot entry by editing the <span style="font-family: 'Courier New', Courier, monospace;">/etc/default/grub</span> file.<br />In this file you'll see something like this near the top: <br /><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;"><span style="background-color: #666666;">GRUB_DEFAULT=0</span><br />#GRUB_HIDDEN_TIMEOUT=0<br />GRUB_HIDDEN_TIMEOUT_QUIET=true<br />GRUB_TIMEOUT=10<br />GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`<br />GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"<br />GRUB_CMDLINE_LINUX=""</span></blockquote><div><br /></div><div>The first line above tells Grub to boot the first boot entry by default (menu item with index 0).</div><div>You can simply change this to menu entry you prefer, but whenever you make any change to this file you need to run the following command to make the changes take effect:<br /><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">$&gt; sudo update-grub</span></blockquote></div><div><br /></div><div><b>Changing the default boot entry from the command line</b></div><div><br /></div><div>A new feature that Grub2 provides is to change this option dynamically from the command-line.</div><div>In order for this to work, instead of setting the <span style="font-family: 'Courier New', Courier, monospace;">GRUB_DEFAULT</span> option to the desired index, set it to '<span style="font-family: 'Courier New', Courier, monospace;">saved</span>' instead, like this:</div><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">GRUB_DEFAULT=saved</span></blockquote><br /><div>And run <span style="font-family: 'Courier New', Courier, monospace;">update-grub</span> to make the changes take effect:</div><div><div><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">$&gt; sudo update-grub</span></blockquote></div></div><div><br /></div><div>Now you can use the <span style="font-family: 'Courier New', Courier, monospace;">grub-set-default</span> and the <span style="font-family: 'Courier New', Courier, monospace;">grub-reboot</span> commands.</div><div>Both commands take the index of the boot entry you want as a command line argument:</div><div><br /></div><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">$&gt; grub-set-default &lt;entry&gt;</span></blockquote>This command will&nbsp;permanently&nbsp;set the default boot entry to the index specified on the command line, useful if you tend to change the default regularly.<br /><br /><blockquote class="tr_bq"><span style="font-family: 'Courier New', Courier, monospace;">$&gt; grub-reboot &lt;entry&gt;</span></blockquote>This command will reboot the machine and boot into the specified boot entry, but only that once. The following boot will use the default.
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding a network printer in Ubuntu 12.04]]></title>
    <link href="http://blog.stevenocchipinti.com/2012/08/adding-network-printer-in-ubuntu-1204.html"/>
    <updated>2012-08-05T04:11:00+10:00</updated>
    <id>http://blog.stevenocchipinti.com/2012/08/adding-network-printer-in-ubuntu-1204</id>
    <content type="html"><![CDATA[<p>In the old days, printing was really hard in linux. It was one of the things that was a deal breaker when trying to switch from Windows for a lot of people, but when I first tried Ubuntu (probably around 2006-2007) it made all that pain go away! It was easy! A couple of clicks and you could set up a network printer and its been that easy ever since.</p>

<p>Recently Ubuntu have tried to make their settings screen a bit like a Mac, and to simplify everything they seem to be using a simplified user interface for the printer configuration too:</p>

<p><img class="center <a" src="href="http://3.bp.blogspot.com/-Bx9JrDkVYrk/UB3w_5N77aI/AAAAAAAAAKY/5HHdw8ZErB0/Screenshot+from+2012-08-05+14:04:37.png">http://3.bp.blogspot.com/-Bx9JrDkVYrk/UB3w_5N77aI/AAAAAAAAAKY/5HHdw8ZErB0/Screenshot+from+2012-08-05+14:04:37.png</a>" title="New Settings user interface" >
<img class="center <a" src="href="http://4.bp.blogspot.com/-xO2uGM8R36A/UB3xME_iwZI/AAAAAAAAAKg/kBFbC_MDcv8/Screenshot+from+2012-08-05+14:04:55.png">http://4.bp.blogspot.com/-xO2uGM8R36A/UB3xME_iwZI/AAAAAAAAAKg/kBFbC_MDcv8/Screenshot+from+2012-08-05+14:04:55.png</a>" title="New Printing user interface" ></p>

<p>Well this new interface doesn&rsquo;t work for me, when I try to add a network printer, I get the error message:</p>

<p><blockquote><p>FirewallD is not running. Network printer detection needs services mdns, ipp, ipp-client and samba-client enabled on firewall.</p></blockquote></p>

<p><img class="center <a" src="href="http://1.bp.blogspot.com/-FTpSMga_I2I/UB3xOZVzlDI/AAAAAAAAAKo/4_KILPWTWTg/Screenshot+from+2012-08-05+14%253A03%253A44.png">http://1.bp.blogspot.com/-FTpSMga_I2I/UB3xOZVzlDI/AAAAAAAAAKo/4_KILPWTWTg/Screenshot+from+2012-08-05+14%253A03%253A44.png</a>" title="The error that stops me from finding my network printer" ></p>

<p>Well no matter what I did, I couldn&rsquo;t add my printer. After some googling around, I found how to get to the old user interface&hellip; which actually works!
Just type this into a terminal:</p>

<p><code>
sudo system-config-printer
</code></p>

<p>And you will be given this old familiar screen:</p>

<p><img class="center <a" src="href="http://1.bp.blogspot.com/-SnoWmsgEnX0/UB3xQWJYmhI/AAAAAAAAAK4/LCbtVTqQFZE/Screenshot+from+2012-08-05+14%253A04%253A55.png">http://1.bp.blogspot.com/-SnoWmsgEnX0/UB3xQWJYmhI/AAAAAAAAAK4/LCbtVTqQFZE/Screenshot+from+2012-08-05+14%253A04%253A55.png</a>" title="The classic printing user interface&hellip; the one that works!" ></p>

<p>Clicking the big &ldquo;Add&rdquo; button in this screen and following the steps worked great for me. Another alternative is to use the CUPS web interface on <a href="http://localhost:631">http://localhost:631</a> but that can be a little more complicated.</p>
]]></content>
  </entry>
  
</feed>
